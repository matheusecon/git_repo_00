new<-data.frame(new)
## ATRIBUINDO VALORES A UMA VARIÁVEL
# atribuindo o valor 15 a x
x <- 3
#mostrando o valor
x
### REMOVER OBJETOS CRIADOS
rem(x)
### REMOVER OBJETOS CRIADOS
remove(x)
## ATRIBUINDO VALORES A UMA VARIÁVEL
# atribuindo o valor 15 a x
x <- 3
rem(x)
### REMOVER OBJETOS CRIADOS
remove(x)
### ESTATÍSTICA DESCRITIVA
## Carregar uma base
library(AER) #essa é uma base, Affairs, no pacote AER
data("Affairs")
summary(Affairs)
summary(Affairs) #fornece a estatística descritiva dos dados da base
library(pastecs)
(Affairs)
View(Affairs)
View(Affairs)
#**# a variável affair se refere ao número de casos extraconjugais do indivíduo no ano anterior
(table(Affairs$affairs))
prop.table(table(Affairs$affairs))
## Histograma
hist(Affairs$affairs)
contingencia <- table(Affairs$affairs, Affairs$children)
contingencia
prop.table(contingencia,margin = 1)
prop.table(contingencia,margin = 2)
## Gráfico de barras
barplot(table(Affairs$yearsmarried), horiz=TRUE, main="Distribuição dos Anos de Casado"))
## Gráfico de barras
barplot(table(Affairs$yearsmarried), horiz=TRUE, main= "Distribuição dos Anos de Casado")
hist(Affairs$affairs, freq=FALSE)
lines(density(Affairs$affairs), lwd=3)
## Gráfico de dispersão
plot(Affairs$age, Affairs$yearsmarried)
### MODELO DE REGRESSÃO LINEAR DE EQUAÇÕES SIMULTÂNEAS
#**# o modelo aqui utilizado se refere a equação de consumo
library(AER)
data("USMacroG")
plot(USMacroG[, c("dpi", "consumption")], lty = c(3, 1), plot.type = "single", ylab= "")
legend("topleft", legend = c("income", "consumption"), lty = c(3, 1), bty = "n")
plot(USMacroG[, c("dpi", "consumption")], lty = c(3, 1), plot.type = "single", ylab= "")
legend("topleft", legend = c("income", "consumption"), lty = c(3, 1), bty = "n")
## Mostrar quantas observações para uma variável
length(consumption)
## Mostrar quantas observações para uma variável
length("consumption")
## Mostrar quantas observações para uma variável
length(consumption)
## Estimação da função consumo keynesiana tradicional
legend("topleft", legend = c("income", "consumption"), lty = cons_key <- lm(consumption ~dpi, data=USMacroG)
summary(cons_key)
## Estimação da função consumo keynesiana tradicional
legend("topleft", legend = c("income", "consumption"), lty = cons_key <- lm(consumption ~dpi, data=USMacroG))
## Estimação da função consumo keynesiana tradicional
cons_key <- lm(consumption ~dpi, data=USMacroG)
summary(cons_key)
# nº de obs usadas na regressão
nobs(cons_key)
names(cons_key)
cons_key$coefficients
cons_key$residuals
cons_rp <- dynlm(consumption ~dpi + L(consumption)-1, data=USMacroG)
## Estimação da função consumo de renda permanente (na qual a renda permanente esperada segue um ajuste de Koyck)
library("dynlm")
## Estimação da função consumo de renda permanente (na qual a renda permanente esperada segue um ajuste de Koyck)
library("dynlm")
??dynlm
help(dynlm)
## Estimação da função consumo de renda permanente (na qual a renda permanente esperada segue um ajuste de Koyck)
install.packages("dynlm")
library("dynlm")
cons_rp <- dynlm(consumption ~dpi + L(consumption)-1, data=USMacroG)
summary(cons_rp)
## Estimação da função consumo com formação de hábitos (o consumo é que segue uma movimentação no tempo ao estilo das defasagens de Koyck)
cons_hab <- dynlm(consumption ~dpi + L(consumption),na.action = NULL, data=USMacroG)
summary(cons_hab)
# Gráficos da regressão
summary(influence.measures(cons_key))
par(mfrow=c(3,3))
plot(cons_key, which=1:6)
plot(cons_key, which=1:6)
par(mfrow=c(3,3))
plot(cons_hab, which=1:6)
# Teste de Breusch-Godfrey
bgtest(cons_key)
# Teste de Box-Ljung
Box.test(residuals(cons_key),type="Ljung-Box")
# Teste de Breusch Pagan
bptest(cons_key)
#Teste RESET
reset(cons_key)
## Regressão da função keynesiana simples com erros robustos
coeftest(cons_key, vcocv=VCOVHC, type="HC4")
## Estimação da função consumo keynesiana tradicional
cons_key <- lm(consumption ~dpi, data=USMacroG)
summary(cons_key)
## Regressão da função keynesiana simples com erros robustos
coeftest(cons_key, vcocv=VCOVHC, type="HC4")
# Teste de Box-Ljung
Box.test(residuals(cons_key),type="Ljung-Box")
# Teste de Breusch Pagan
bptest(cons_key)
# Teste de estacionariedade BW
dwtest(cons_key)
cons<-as.ts(USMacroG[, "consumption"])
dpi<- as.ts(USMacroG[, "dpi"])
conslag=lag(cons,-1)
dpilag=lag(dpi,-1)
consbi=ts.intersect(cons, conslag)
dpibi =ts.intersect(dpi, dpilag)
consbi
cons_keyn<-lm(consbi[,1]~dpibi[,1])
cons_rpn <-lm(consbi[,1]~dpibi[,1] + consbi[,2]-1)
cons_habn <-lm(consbi[,1]~dpibi[,1]+consbi[,2])
summary(cons_keyn)
summary(cons_rpn)
summary(cons_habn)
## Teste de Wald para comparar os três modelos
waldtest(cons_rpn, cons_habn, cons_keyn)
## teste Type I ANOVA
anova(cons_habn)
# Gráficos da regressão
summary(influence.measures(cons_key))
par(mfrow=c(3,3))
plot(cons_key, which=1:6)
#**# outra maneira de observar os pontos de influência
influenceIndexPlot(cons_key,vars=c("Cook", "hat"), id.n=3)
# Teste t para os coeficientes
coftest(cons_key)
# Teste t para os coeficientes
install.packages("coftest")
coftest(cons_key)
### MQ2E E VARIÁVEIS INSTRUMENTAIS
library(AER)
library(sem)
library(lmtest)
data("CollegeDistance")
cd.d<-CollegeDistance
reg.simples<-lm(education~urban+gender+ethnicity+unemp+distance, data=cd.d)
sumary(reg.simples)
summary(reg.simples)
# salvar a VI
cd.d$ed.pred<- predict(reg.simples)
#**# 2º estágio
segundo.estagio,-lm(wage~urban+gender+ethnicity+unemp+ed.pred, data=cd.d)
summary(segundo.estagio)
#**# 2º estágio
segundo.estagio<-lm(wage~urban+gender+ethnicity+unemp+ed.pred, data=cd.d)
summary(segundo.estagio)
ivreg(formula=wage~urban+gender+ethnicity+unemp+education |
urban+gender+ethnicity+unemp+distance, data=cd.d)
## Variáveis Instrumentais (IV)
ivreg(formula=wage~urban+gender+ethnicity+unemp+education | urban+gender+ethnicity+unemp+distance, data=cd.d)
## Variáveis Instrumentais (IV)
m<-ivreg(formula=wage~urban+gender+ethnicity+unemp+education | urban+gender+ethnicity+unemp+distance, data=cd.d)
summary(m)
m2 <- tsls(wage ~ urban + gender + ethnicity + unemp + education,
~ urban + gender + ethnicity + unemp + distance, data = cd.d)
summary(m2)
## Teste de correlação com os possíveis instrumentos
corr_variaveis = data.frame(cbind(cd.d$education,cd.d$distance,cd.d$score))
colnames(corr_variaveis)=cbind("education","distance","score")
cor(corr_variaveis)
reg2<-lm(education~urban+gender+ethnicity+unemp+distance+score, data=cd.d)
summary(reg2)
